{"version":3,"sources":["components/Layout/Layout.tsx","components/Title/Title.tsx","components/Button/Button.tsx","containers/Main/Main.tsx","index.tsx","mockApi/mockData.ts","containers/Main/Main.module.scss"],"names":["Layout","children","classname","className","Title","text","Button","onClick","Main","data","buttonTypes","useState","answer","setAnswer","reply","setReply","useEffect","yes","firstReply","no","secondReply","reset","question","styles","title","buttonsWrapper","resetBtn","ReactDOM","render","document","getElementById","module","exports"],"mappings":"4LAeeA,EARA,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,UAC1B,OACE,qBAAKC,UAAWD,EAAhB,SACGD,KCDQG,EAJD,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMH,EAAT,EAASA,UAAT,OACZ,oBAAIC,UAAWD,EAAf,SAA2BG,KCIdC,EAJA,SAAC,GAAD,IAAGD,EAAH,EAAGA,KAAME,EAAT,EAASA,QAASL,EAAlB,EAAkBA,UAAlB,OACb,wBAAQC,UAAWD,EAAWK,QAASA,EAAvC,SAAiDF,K,gBCsDpCG,EAxCF,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,YAA6B,EACrBC,mBAAS,IADY,mBAC1CC,EAD0C,KAClCC,EADkC,OAEvBF,mBAAS,IAFc,mBAE1CG,EAF0C,KAEnCC,EAFmC,KAgBjD,OAZAC,qBAAU,WACR,OAAOJ,GACL,KAAKF,EAAYO,IACf,OAAOF,EAASN,EAAKS,YACvB,KAAKR,EAAYS,GACf,OAAOJ,EAASN,EAAKW,aACvB,KAAKV,EAAYW,MACf,OAAON,EAAS,OAGnB,CAACH,IAGF,eAAC,EAAD,WACE,cAAC,EAAD,CAAOP,KAAMI,EAAKa,SAAUpB,UAAWqB,IAAOC,QAC5CV,EAUA,qBAAKX,UAAWoB,IAAOT,MAAvB,SAA+BA,IAT/B,sBAAKX,UAAWoB,IAAOE,eAAvB,UACE,cAAC,EAAD,CACEpB,KAAMK,EAAYO,IAClBV,QAAS,kBAAMM,EAAUH,EAAYO,QACvC,cAAC,EAAD,CACEZ,KAAMK,EAAYS,GAClBZ,QAAS,kBAAMM,EAAUH,EAAYS,YAKxCL,GACD,cAAC,EAAD,CACET,KAAMK,EAAYW,MAClBnB,UAAWqB,IAAOG,SAClBnB,QAAS,kBAAMM,EAAUH,EAAYW,c,MCjD/CM,IAASC,OACP,cAAC,EAAD,CACEnB,KCT2B,CAC7Ba,SAAU,qBACVJ,WAAY,gBACZE,YAAa,UDOXV,YCJ8B,CAC9BO,IAAK,MACLE,GAAI,KACJE,MAAO,WDGTQ,SAASC,eAAe,U,kBEX1BC,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,eAAiB,6BAA6B,MAAQ,oBAAoB,SAAW,0B","file":"static/js/main.b31f702a.chunk.js","sourcesContent":["import React from 'react';\n\ninterface LayoutProps {\n  children: React.ReactNode,\n  classname?: string,\n}\n\nconst Layout = ({ children, classname }: LayoutProps) => {\n  return (\n    <div className={classname}>\n      {children}\n    </div>\n  )\n}\n\nexport default Layout;","interface TitleProps {\n  text: string,\n  classname: string\n}\n\nconst Title = ({ text, classname }: TitleProps) => (\n  <h1 className={classname}>{text}</h1>\n)\n\nexport default Title;","interface ButtonProps {\n  text: string,\n  onClick: () => void,\n  classname?: string\n}\n\nconst Button = ({ text, onClick, classname }: ButtonProps) => (\n  <button className={classname} onClick={onClick}>{text}</button>\n)\n\nexport default Button;","import { useState, useEffect } from 'react';\n\nimport Layout from '../../components/Layout/Layout';\nimport Title from '../../components/Title/Title';\nimport Button from '../../components/Button/Button';\n\nimport styles from './Main.module.scss';\n\ninterface MainProps {\n  data: {\n    question: string,\n    firstReply: string,\n    secondReply: string\n  },\n  buttonTypes: {\n    yes: string,\n    no: string,\n    reset: string\n  }\n}\n\nconst Main = ({ data, buttonTypes }: MainProps) => {\n  const [answer, setAnswer] = useState('');\n  const [reply, setReply] = useState('');\n\n  useEffect(() => {\n    switch(answer) {\n      case buttonTypes.yes:\n        return setReply(data.firstReply);\n      case buttonTypes.no:\n        return setReply(data.secondReply);\n      case buttonTypes.reset:\n        return setReply('');\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [answer])\n\n  return (\n    <Layout>\n      <Title text={data.question} classname={styles.title}/>\n      {!reply ? (\n        <div className={styles.buttonsWrapper}>\n          <Button \n            text={buttonTypes.yes} \n            onClick={() => setAnswer(buttonTypes.yes)} />\n          <Button \n            text={buttonTypes.no} \n            onClick={() => setAnswer(buttonTypes.no)} />\n        </div>\n      ) : (\n        <div className={styles.reply}>{reply}</div>\n      )}\n      {!!reply && (\n        <Button \n          text={buttonTypes.reset}\n          classname={styles.resetBtn}\n          onClick={() => setAnswer(buttonTypes.reset)} />\n      )}\n    </Layout>\n  )};\n\nexport default Main;","import ReactDOM from 'react-dom';\nimport Main from './containers/Main/Main';\n\nimport { mockData, buttonTypes } from './mockApi/mockData';\n\nimport './index.scss';\n\nReactDOM.render(\n  <Main \n    data={mockData()} \n    buttonTypes={buttonTypes()}\n  />,\n  document.getElementById('root')\n);\n","export const mockData = () => ({\n  question: \"Do you like React?\",\n  firstReply: \"Good choice !\",\n  secondReply: \"Damn !\"\n});\n\nexport const buttonTypes = () => ({\n    yes: 'Yes',\n    no: 'No',\n    reset: 'Reset'\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Main_title__3fC04\",\"buttonsWrapper\":\"Main_buttonsWrapper__2S5-G\",\"reply\":\"Main_reply__1Hxlz\",\"resetBtn\":\"Main_resetBtn__1e_S7\"};"],"sourceRoot":""}